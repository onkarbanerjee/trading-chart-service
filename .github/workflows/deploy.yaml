name: deploy

on:
  release:
    types: [ published ]

jobs:
  deploy_job:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      APPLICATION_REPO: "api-application-state"
      BRANCH: "test"
      GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.ENGINEERING_GITHUB_PERSONAL_ACCESS_TOKEN }}
      GIT_CONFIG_USER_EMAIL: ${{ secrets.ENGINEERING_GIT_CONFIG_USER_EMAIL }}
      GIT_CONFIG_USER_NAME: ${{ secrets.ENGINEERING_GIT_CONFIG_USER_NAME }}
      GPG_PRIVATE_KEY: ${{ secrets.ENGINEERING_GPG_PRIVATE_KEY }}

    steps:
      - name: Configure ssh-key for private modules
        env:
          SSH_KEY: ${{ secrets.ENGINEERING_SSH_KEY }}
        run: mkdir -p ~/.ssh; echo "$SSH_KEY" > ~/.ssh/id_rsa; chmod 600 ~/.ssh/id_rsa; git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Set env
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Clone api-application-state repo
        run: git clone "https://${{ env.GITHUB_PERSONAL_ACCESS_TOKEN }}@github.com/honestbank/${{ env.APPLICATION_REPO }}.git" ${{ env.APPLICATION_REPO }}

      - name: Create api-application-state branch
        run: cd ${{ env.APPLICATION_REPO }} && git checkout "$BRANCH" && cd ${{ env.VALUES_PATH}}

      - name: Customize deploy script
        shell: bash
        run: |
          cd ${{ env.APPLICATION_REPO }}
          find \
            apps/honestcard \
            honest-charts/api-gateway \
            honest-charts/eventing \
            honest-charts/subgraph \
            serverless-functions/honestcard \
            -name "*version.yaml" | xargs sed \
            --regexp-extended -i \
            --expression="s/:( ?)(.+) #( ?)(repository:${{env.REPO_NAME}})\$/: ${{env.VERSION}} # repository:${{env.REPO_NAME}}/g"

      - name: Setup GPG
        shell: bash
        run: |
          echo "${{ env.GPG_PRIVATE_KEY }}" >> private.key
          gpg --import private.key
          KEY=$(gpg  --list-secret-keys ${{ env.GIT_CONFIG_USER_EMAIL }} | head -2 | tail -n 1 | awk '{print$1}')
          git config --global user.signingkey $KEY

      - name: git-diff
        run: >
          cd $APPLICATION_REPO && git diff

      - name: Push new api-application-state
        run: >
          cd $APPLICATION_REPO && git config user.email "${{ env.GIT_CONFIG_USER_EMAIL }}"&& git add * && git config user.name "${{ env.GIT_CONFIG_USER_NAME }}" && git commit -S -a -m "chore($REPO_NAME): bump to version $VERSION" && git push --set-upstream origin "$BRANCH"
